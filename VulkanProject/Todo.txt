do UI rendering before world rendering and write depthbuffer to save resources

Fix runtime library to use /MD and not /MDd.

check if can bind multiple buffers with vkCmdBindVertexBuffers

maybe use enum class with BlockType

optimize vertex size
  Per face:
    3*u5 = u16 blockLocation
    u16 textureIndex
    u16 modelIndex
    4*u8 darkness
    
    2+2+2+4=10
  
  model buffer:
    4*3*f32 quad vertex locations
    4*f32 UV coordinates for greedy meshing
    3*f32 normal


ECS
- inventory
- block network
  - pipes
  - multiblocks
- AE2
- directional access

- create archetypes that contain different components.
- own array for every archetype.
- have unordered_map to find index of archetype for example when placing blocks.
- ECS for items?


ECS structure:

  worldLocation => entityIndex

  EntityIndex => list of components, component list index => component

  1. index entity list
  2. check if component
  3. calculate component index
  4. index component list

createEntity():
  1. Add to entity list
  2. create its components
    1. create a custom adder
    or
    1. get component bits and address into the correct arrays
  3. add components to point to entity
  